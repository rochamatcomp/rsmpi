language: rust

sudo: false

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-precise-3.9
    packages:
      # for building MPI libraries
      - build-essential
      - gfortran
      # bindgen dependency
      - libclang-3.9-dev
      # libffi dependency
      - texinfo

env:
  global:
    - RELEASE_LIBRARY=mpich
    - RELEASE_LIBRARY_VERSION=3.2
    - LIBCLANG_PATH=/usr/lib/llvm-3.9/lib
    # GH_TOKEN=...
    - secure: "b/XSfdfqZZCP+hG65bqi+wPPh0z5lMRCL7X4Y0vNPt01WGqu851RHF6XGvkBa8MQWWYylDAAZTFWHDHG0uAb94Dpvo2+XpU4PtRrTUd52lN3U66bRyR1H5wRlhCBYpqnke7S3zP2XKvHfTUFNPyF6NliCVKPsntTPsb7szYevZzYzIBIjsPq5IbUqezsV6aVvjJ6wcIjMdzhsDafefNGxEkSis6XhSPXif02enyglKCN6qhPcd+RdaCP4NyUhxxyNO7w6tGooCo1V534/EPH08u0tU78htV/TNzlvobjAvxrC4lnCY7MJW1lFkJL9tzTo1LC2xaFMzLwzsYr3b+PCBg94Iz4OcA7le630SiZC0iI2lLL7xsaSp+qSFK1YTp0nPH0LXE67XesAjFHnRh/EroJK9UK58L+enBWUzsm6Q4ey2k+AaOw9IkHvDXtgjAJknmG+na3dRVbmEetxVkxm9yucAzUxw12h4ZHwYv2LPWDtu+CL7TbUItqgHIkw0AGGX5eII3uThOib+aKuG8g86G16XHQ2aXEZmkA9BdXqlLG4P5qSDN1SiO+s8W6Q2WVgVHlk4tlpSEOXXx0AbeBndQzRAFHKEyBeVq3NKYLncikHjndR1/jvzTMSVIli2ptbUJbXTZMTT5B05QWIR9Xh95gxKunc1kfNJ6YSEhVDf0="
    # CRATES_IO_TOKEN=...
    - secure: "FYoav+St+90i6AQzyMw+NJdtktG2UMK7szt7ar88ww7bkkCd9I9qgtqqW6mopzpnguRhBusxoCsmiroFbXVO1R3vSP1ugECUTDCK7x/Tqkc/wa0MOqlmBneG+bZOF3YjiDTfaAIUI8r10RstfRhRwIKgZI3vE/8TEgTGlWW+cZuHaz7U4wesHUY+euuSoLuD7XrlI1N9EBAbHwTtLpfHoONSw8fxVQc0nQ7vTBrC+UQiRZA8oFP7qpJ/9xfsCMWSyVihuSzdHoCRIxCs+rWROBpULAqvPa0vYdxE7oQHPwbaQ8bsv088Mowjaq5Dp8NimodimQsx7D58g/e+INEk9q3dwj/RN0iMgNYqhYv9Wu+vMWNMbvReSHlJtIYWtl2varXQI2hOPC/+6OhfzlAT1hBsrkJjZ6bQ9Yv9NUGNQHNrFvdCKOEvSG3wHNB10mfBB/KSVzB/ya8suEBR07CjzbrzTlH2SUYfSHS5iNbP791kAYp2MyMn69ZajeEZ3iYwwG2lHH2CONB/QiAX6ZDc5J3jM8gmxu2S5QkZkZieBnDZG/OsYjOw7Zka3ktlGW+Khn3RRRsDYMrpAN5qmiEO6vdDP/XcRZw4ERfHQd8A9kEhnhJGOlg6KGyNM0pi7s4IX8VWkbxAmY53HqsyK1eagIVLsxkzCn3GKfVQuufHBBc="


matrix:
  include:
    - env: MPI_LIBRARY=mpich MPI_LIBRARY_VERSION=3.2.1
      rust: stable
    - env: MPI_LIBRARY=mpich MPI_LIBRARY_VERSION=3.1.4
      rust: stable
    - env: MPI_LIBRARY=openmpi MPI_LIBRARY_VERSION=3.0.0
      rust: stable
    - env: MPI_LIBRARY=openmpi MPI_LIBRARY_VERSION=2.1.2
      rust: stable
    - env: MPI_LIBRARY=openmpi MPI_LIBRARY_VERSION=2.0.4
      rust: stable
    - env: MPI_LIBRARY=mpich MPI_LIBRARY_VERSION=3.2.1
      rust: beta
    - env: MPI_LIBRARY=mpich MPI_LIBRARY_VERSION=3.2.1
      rust: nightly
  allow_failures:
    - rust: nightly

install:
  - sh ci/install-mpi.sh
  - export MPI_PREFIX="${HOME}/opt/${MPI_LIBRARY}-${MPI_LIBRARY_VERSION}"
  - export PATH="${HOME}/.local/bin:${MPI_PREFIX}/bin${PATH:+":${PATH}"}"
  - export LD_LIBRARY_PATH="${MPI_PREFIX}/lib${LD_LIBRARY_PATH:+":${LD_LIBRARY_PATH}"}"
  - cargo install --force cargo-mpirun
  - if [ "$TRAVIS_RUST_VERSION" = "nightly" ]; then
      cargo install --force clippy;
    fi

script:
  - cargo build -v && cargo test -v && sh ci/run-examples.sh
  - if [ "$TRAVIS_RUST_VERSION" = "nightly" ]; then
      cargo clippy -v;
    fi

before_deploy:
  # Login to cates.io
  - cargo login "${CRATES_IO_TOKEN}"
  # Build crate
  - cargo package -v --no-verify
  # Build docs
  - cargo doc -v --no-deps
  - echo "<meta http-equiv=refresh content=0;url=mpi/index.html>" >> target/doc/index.html

deploy:
  # Build and upload documentation to GitHub pages
  - provider: pages
    github_token: $GH_TOKEN
    local_dir: target/doc
    skip_cleanup: true
    on:
      tags: true
      condition: "${MPI_LIBRARY} = ${RELEASE_LIBRARY} && ${MPI_LIBRARY_VERSION} = ${RELEASE_LIBRARY_VERSION} && ${TRAVIS_RUST_VERSION} = stable"
  # Deploy crate to GitHub releases
  - provider: releases
    api_key: $GH_TOKEN
    file: target/package/mpi-${TRAVIS_TAG}.crate
    skip_cleanup: true
    on:
      tags: true
      condition: "${MPI_LIBRARY} = ${RELEASE_LIBRARY} && ${MPI_LIBRARY_VERSION} = ${RELEASE_LIBRARY_VERSION} && ${TRAVIS_RUST_VERSION} = stable"
  # Deploy the crate to crates.io
  - provider: script
    script: ci/deploy-crate.sh
    skip_cleanup: true
    on:
      tags: true
      condition: "${MPI_LIBRARY} = ${RELEASE_LIBRARY} && ${MPI_LIBRARY_VERSION} = ${RELEASE_LIBRARY_VERSION} && ${TRAVIS_RUST_VERSION} = stable"

cache:
  cargo: true
  directories:
    - $HOME/opt
